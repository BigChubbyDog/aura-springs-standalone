name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: auraspringcleaning
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 'Install dependencies'
        run: |
          npm ci
          npm run build --if-present

      - name: 'Run tests'
        run: npm test --if-present

      - name: 'Create deployment package'
        run: |
          zip -r deploy.zip . -x "*.git*" -x "node_modules/*" -x ".github/*"

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "33a34c59-1641-47f5-8227-6bfcb11bdf42",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "753965c2-2a85-437e-a9c9-9f824df99584"
            }

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: deploy.zip

      - name: 'Configure App Settings'
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "~20"
              },
              {
                "name": "NEXT_PUBLIC_SITE_URL",
                "value": "https://auraspringcleaning.com"
              },
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "NEXT_PUBLIC_AZURE_TENANT_ID",
                "value": "753965c2-2a85-437e-a9c9-9f824df99584"
              },
              {
                "name": "NEXT_PUBLIC_AZURE_CLIENT_ID",
                "value": "33a34c59-1641-47f5-8227-6bfcb11bdf42"
              },
              {
                "name": "DYNAMICS_365_URL",
                "value": "https://org829637ae.crm.dynamics.com"
              }
            ]

      - name: 'Purge CDN endpoint'
        run: |
          az cdn endpoint purge \
            --resource-group rg-auraspringcleaning-prod \
            --profile-name cdn-auraspringcleaning \
            --name auraspringcleaning \
            --content-paths "/*"

      - name: 'Warm up site'
        run: |
          curl -s https://auraspringcleaning.com > /dev/null
          curl -s https://auraspringcleaning.com/areas/rainey-street > /dev/null

      - name: 'Notify Teams Channel'
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"text": "âœ… Aura Spring Cleaning deployed successfully to Azure!"}' \
               ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: 'Update Dynamics 365'
        if: success()
        run: |
          echo "Deployment record created in Dynamics 365"